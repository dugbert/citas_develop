JSON

"JSON (JavaScript Object Notation) is a lightweight data-interchange format.It i easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999. JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages, including C, C++, C#, JavaScript, Perl, Python, and many others. This properties make JSON an ideal data-interchange language." https://www.json.org/

 "[...] is an open-standard file format that uses human-readable text to transmit data objects consisting of attribute-value pairs and array data types (or any other serializable value). It is very common data format used for asynchronous browser-server communication, including as a replacement for XML in some AJAX-style systems." https://en.wikipedia.org/wiki/JSON

    Exchanging data
    "When exchanging data between a browser and a server, the data can only be text. JSON is text, and we can convert any JAvaScript object into JSON, and send JSON to the server. We can also convert any JSON received from the server into JavaScript objects. This way we can work with the data as JavaScript objects, with no complicated parsing and translations." https://www.w3schools.com/js/js_json_intro.asp

        "You can include the same basic data type inside JSON as you can in a standard JavaScript object - strings, numbers, arrays, booleans, and other object literals. This allows you to construct a data hierarchy." https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON

    Syntax Rules
    "JSON syntax is derived from JavaScript object notation syntax:
        -Data is in name/value pairs
        -Data is separated by commas
        -Curly braces hold objects
        -Square brackets hold arrays" https://www.w3schools.com/js/js_json_syntax.asp



    Features
    "-JSON is purely a data format - it contains only properties, no methods.
     -JSON requires double quotes to be used around strings and property names. Single quotes are not valid.
     -Even a single misplaced comma or colon can cause a JSON file to go wrong, and not work. You should be careful to validate any data you are attempting to use (although computer-generated JSON is less likely to include errors, as long as the generator program is working correctly). You can validate JSON using an application like JSONLint.
     -JSON can actually take the form of any data type that valid for inclusion inside JSON, not just arrays or objects.
     -Unlike in JavaScript code in which object properties may be unquoted, in JSON, only quoted strings may be used as properties." https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON

    JSON Files
    "-The file type for JSON files is '.json'
     -The MIME type for JSON text is application/json." https://www.w3schools.com/js/js_json_syntax.asp

    Structures
    "JSON is built on two structures:
        -A collection of name/value pairs. In various language, this is realized as an object, record, struct, dictionary, has table, keyed list, or associative array.
        -An ordered list of values. In most languages, this is realized as an array, vector, list, or sequence.
    This are universal data structures. Virtually all modern programming languages support them in one form or another. It makes sense that a data format that is interchangable with programming languages also be based on these structures." https://www.json.org/

        JSON Data
        "JSON data is written as name/value pairs. A name/value pair consists of a field nname (in double quotes), followed by a colon, followedby a value. [...] JSON names require double quotes. JavaScript names don't." https://www.w3schools.com/js/js_json_syntax.asp

        Object
        "An object is an unordered set of name/value pairs. An object begins with { (left brace) and ends with } (right brace). Each name is followed by : (colon) and the name/value pairs are separated by , (comma)." https://www.json.org/

        Array
        "An array is an ordered collection of values. An array begins with [ (left bracket) and ends with ] (right bracket). Values are separated by , (comma)." https://www.json.org/

        Value
        "A value can be a string in double quotes, or a number, or true or false or null, or an object or an array. These structures can be nested." https://www.json.org/

            String
            "A string is a sequence of zero or more Unicode characters, wrapped in double quotes, using backslash escapes. A character is represented as a single character string. A string is very much like a C or Java string." https://www.json.org/

            Number
            "A number is very much like a C or Java number, except that the octal and hexadecimal formats are not used." https://www.json.org/

            Whitespace
            "White space can be inserted between any pair of tokens. Excepting a few encoding details, that completely describes the language." https://www.json.org/